apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
  namespace: default
data:
  tempo.yaml: |
    # Tempo Configuration
    server:
      http_listen_port: 3200
      grpc_listen_port: 4317

    distributor:
      receivers:
        otlp:
          protocols:
            http:
            grpc:

    ingester:
      trace_idle_period: 10s
      max_block_bytes: 1000000
      max_block_duration: 5m

    compactor:
      compaction:
        compaction_window: 1h
        max_block_bytes: 100000000
        block_retention: 14d
        compacted_block_retention: 10m

    storage:
      trace:
        backend: s3
        s3:
          endpoint: s3.amazonaws.com
          bucket: tempo-traces
          access_key: ${AWS_ACCESS_KEY}
          secret_key: ${AWS_SECRET_KEY}
          region: us-east-1

    metrics_generator:
      registry:
        collection_interval: 5s

    overrides:
      metrics_generator_processors: ["service-graphs", "span-metrics", "local-blocks"]


-----------------------------------------


apiVersion: v1
kind: Secret
metadata:
  name: tempo-s3-credentials
  namespace: default
type: Opaque
data:
  AWS_ACCESS_KEY: <base64-encoded-access-key>
  AWS_SECRET_KEY: <base64-encoded-secret-key>


--------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tempo
  template:
    metadata:
      labels:
        app: tempo
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:latest
          ports:
            - containerPort: 3200  # HTTP
            - containerPort: 4317  # gRPC
          env:
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: tempo-s3-credentials
                  key: AWS_ACCESS_KEY
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: tempo-s3-credentials
                  key: AWS_SECRET_KEY
          volumeMounts:
            - name: tempo-config
              mountPath: /etc/tempo
              subPath: tempo.yaml
      volumes:
        - name: tempo-config
          configMap:
            name: tempo-config



---------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: tempo
  namespace: default
spec:
  type: NodePort
  selector:
    app: tempo
  ports:
    - protocol: TCP
      port: 3200        # HTTP port
      targetPort: 3200
      nodePort: 30080   # Expose on a specific port
    - protocol: TCP
      port: 4317        # gRPC port
      targetPort: 4317
      nodePort: 30081   # Expose on a specific port


-----------------------------------------------

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-tempo-external
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: tempo
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0   # Allow incoming traffic from all IPs (replace with Grafana IP for stricter policy)
      ports:
        - protocol: TCP
          port: 3200         # HTTP
        - protocol: TCP
          port: 4317         # gRPC
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0   # Allow outgoing traffic to all IPs (replace with Grafana IP for stricter policy)
      ports:
        - protocol: TCP
          port: 443          # For HTTPS traffic to S3


------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tempo-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-by-header: "X-Use-Tempo"
spec:
  rules:
    - host: your-domain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tempo
                port:
                  number: 3200
